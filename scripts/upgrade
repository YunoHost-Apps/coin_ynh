#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

export app=$YNH_APP_INSTANCE_NAME

export domain=$(ynh_app_setting_get --app=$app --key=domain)
export path_url=$(ynh_app_setting_get --app=$app --key=path)
export admin=$(ynh_app_setting_get --app=$app --key=admin)
export email=$(ynh_app_setting_get --app=$app --key=email)
export isp_name=$(ynh_app_setting_get --app=$app --key=isp_name)
export isp_site=$(ynh_app_setting_get --app=$app --key=isp_site)
export secret=$(ynh_app_setting_get --app=$app --key=secret)
export final_path=$(ynh_app_setting_get --app=$app --key=final_path)
export db_name=$(ynh_app_setting_get --app=$app --key=db_name)
export db_user=$db_name
export db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	ynh_clean_check_starting
	# Restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# Cleaning legacy permissions
if ynh_legacy_permissions_exists; then
	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
	db_name=$(ynh_sanitize_dbid --db_name=$app)
	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
fi

# If final_path doesn't exist, create it
if [ -z "$final_path" ]; then
	final_path=/opt/$app
	ynh_app_setting_set --app=$app --key=final_path --value=$final_path
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$final_path"
fi

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# SPECIFIC UPGRADE
#=================================================
# CONFIGURE DJANGO
#=================================================
ynh_script_progression --message="Configuring Django..."

export prefix="${path_url#"/"}/"
prefix=${prefix%"/"}
ynh_backup_if_checksum_is_different --file="$final_path/coin/settings_local.py"
ynh_render_template ../conf/local.py.j2 "$final_path/coin/setings_local.py"
ynh_store_file_checksum --file="$final_path/coin/settings_local.py"

virtualenv "$final_path/venv"
(
	set +o nounset
	source "${final_path}/venv/bin/activate"
	set -o nounset
    
    #=================================================
    # PYTHON DEPENDENCIES
    #=================================================
    ynh_script_progression --message="Installing more dependencies..."

    echo "django-auth-ldap<1.4" >> $final_path/requirements.txt
    $final_path/venv/bin/pip install -r $final_path/requirements.txt
    
    #=================================================
    # MIGRATE DB
    #=================================================
    ynh_script_progression --message="Migrating database..."

    pushd $final_path
    	$final_path/venv/bin/python manage.py migrate --noinput
    
    #=================================================
    # COLLECT FILES
    #=================================================
    ynh_script_progression --message="Collecting files..."

    	$final_path/venv/bin/python manage.py collectstatic --noinput
    popd
)

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

ynh_add_config --template="../conf/gunicorn_config.py" --destination="$final_path/gunicorn_config.py"

chown $app:www-data "$final_path/gunicorn_config.py"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description "$app daemon" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
