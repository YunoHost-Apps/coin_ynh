#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_python
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? export app=$YNH_APP_INSTANCE_NAME

#REMOVEME? export domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? export path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? export admin=$(ynh_app_setting_get --app=$app --key=admin)
#REMOVEME? export email=$(ynh_app_setting_get --app=$app --key=email)
#REMOVEME? export isp_name=$(ynh_app_setting_get --app=$app --key=isp_name)
#REMOVEME? export isp_site=$(ynh_app_setting_get --app=$app --key=isp_site)
#REMOVEME? export secret=$(ynh_app_setting_get --app=$app --key=secret)
#REMOVEME? export install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? export db_name=$(ynh_app_setting_get --app=$app --key=db_name)
export db_user=$db_name
#REMOVEME? export db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..." --weight=1

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
	db_name=$(ynh_sanitize_dbid --db_name=$app)
#REMOVEME? 	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
fi

# If install_dir doesn't exist, create it
if [ -z "$install_dir" ]; then
#REMOVEME? 	install_dir=/opt/$app
#REMOVEME? 	ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
fi

ynh_secure_remove --file="${install_dir}/venv"

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..." --weight=1

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies
ynh_install_python --python_version=$python_version

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# CONFIGURE DJANGO
#=================================================
ynh_script_progression --message="Configuring Django..." --weight=1

export prefix="${path#"/"}/"
prefix=${prefix%"/"}
ynh_backup_if_checksum_is_different --file="$install_dir/coin/settings_local.py"
ynh_render_template ../conf/local.py.j2 "$install_dir/coin/setings_local.py"
ynh_store_file_checksum --file="$install_dir/coin/settings_local.py"

#=================================================
# PYTHON DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Installing more dependencies..." --weight=1

pushd "$install_dir"
	ynh_use_python
	ynh_exec_warn_less $ynh_pip install --upgrade pip
	ynh_exec_warn_less $ynh_pip install gunicorn
	echo "django-auth-ldap<1.4" >> $install_dir/requirements.txt
	ynh_exec_warn_less $ynh_pip install -r $install_dir/requirements.txt
popd

#=================================================
# MIGRATE DB
#=================================================
ynh_script_progression --message="Migrating database..." --weight=1

pushd "$install_dir"
	ynh_exec_warn_less $ynh_python manage.py migrate --noinput
popd

#=================================================
# COLLECT FILES
#=================================================
ynh_script_progression --message="Collecting files..." --weight=1

pushd "$install_dir"
	ynh_exec_warn_less $ynh_python manage.py collectstatic --noinput
popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template="../conf/gunicorn_config.py" --destination="$install_dir/gunicorn_config.py"

chown $app:www-data "$install_dir/gunicorn_config.py"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description "$app daemon" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
